 this is the code to save and load from Json
 make sure to fill in the reference in the inspector of the object attached
 make sure to call the right index for achievement
 just copy paste everything
 make sure to copy paste the reference in reference area
 make sure to copy paste the call method in where it should be
  make sure to copy paste the main method inside the MonoBehaviour class, recommend to paste at the end
 
 
 //REFERENCE
    //achievement
    [SerializeField] public GameObject panel;
    public CreateAchievement[] newAchievement;
    public TMPro.TextMeshProUGUI title;   
    

//CALL METHOD
            //JSON
            //index 0 achievement = player
            //index 1 achievement = first level clear
            //index 2 achievement = cat slayer
            //index 3 achievement = secret portal
            LoadFromJson(this is 0 to 3);
    
    
    
    
    
//MAIN CODE

    //achievements JSON
    //just copy paste
    //the index is the achievement index
    public void LoadFromJson(int index)
    {
        //load json file
        string json = File.ReadAllText(Application.dataPath + "/json/AchievementJSON.json");
        AchievementJson data = JsonUtility.FromJson<AchievementJson>(json);

        bool[] loadData;
        bool[] loadNotify;
        loadData = new bool[4];
        loadNotify = new bool[4];
        for(int i = 0; i < 4; i++)
        {
            loadData[i] = data.achievementUnlock[i];
            loadNotify[i] = data.achievementNotify[i];
        }
        loadData[index] = true;

        //if they got the achievement but no notification then notify
        if (loadData[index] && !loadNotify[index])
        {
            Debug.Log("open panel");
            Animator animator = panel.GetComponent<Animator>();
            if(animator != null)
            {
                //pop notification of new achievement
                title.text = newAchievement[index].name;
                animator.SetBool("open", true);
                loadNotify[index] = true;
                StartCoroutine(AchievementNotify(5, animator));
            }

        }

        SaveToJson(loadData, loadNotify);
    }

    public void SaveToJson(bool[] loadData, bool[]loadNotify)
    {
        AchievementJson data = new AchievementJson();
        data.achievementUnlock = new bool[4];
        data.achievementNotify = new bool[4];

        for(int i = 0; i < 4; i++)
        {
            data.achievementUnlock[i] = loadData[i];
            data.achievementNotify[i] = loadNotify[i];
        }

        string json = JsonUtility.ToJson(data,true);
        File.WriteAllText(Application.dataPath + "/json/AchievementJSON.json", json);
    }

    IEnumerator AchievementNotify(float waitTime, Animator animator)
    {
        yield return new WaitForSeconds(waitTime); 
        Debug.Log("open animator"); 
        animator.SetBool("open", false);
    }








    //not included in copy paste
    // i repeat, NO DOT COPY PASTE
    //this is the default json file

    {
    "achievementUnlock": [
        false,
        false,
        false,
        false
    ],
    "achievementNotify": [
        false,
        false,
        false,
        false
    ]
}